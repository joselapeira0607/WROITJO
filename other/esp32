#include <Wire.h>
#include <Adafruit_VL53L0X.h>

// Pines para los pines XSHUT de los sensores
#define RXD2 16
#define TXD2 17
const int xshutPin1 = 2;
const int xshutPin2 = 4;

// Objetos para los sensores VL53L0X
Adafruit_VL53L0X lox1 = Adafruit_VL53L0X();
Adafruit_VL53L0X lox2 = Adafruit_VL53L0X();

// Nuevas direcciones I2C para los sensores (puedes elegir otras)
const uint8_t newAddress1 = 0x30; // Dirección para el sensor 1
const uint8_t newAddress2 = 0x31; // Dirección para el sensor 2

void setup() {
  Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2); // 9600 baudios, 8 bits de datos, sin paridad, 1 bit de parada
  Serial.println("ESP32: Serial2 iniciado a 9600 baudios.");
  Serial.begin(9600);
  Serial.println("Iniciando Sensores VL53L0X...");
  Wire.begin(); // Inicializa el bus I2C

  // --- Inicialización del Sensor 1 ---
  pinMode(xshutPin1, OUTPUT);
  digitalWrite(xshutPin1, LOW); // Asegura que el sensor 1 esté apagado inicialmente
  delay(10); // Pequeña espera para asegurar el estado LOW
  digitalWrite(xshutPin1, HIGH); // Enciende el sensor 1
  delay(10); // Espera para que el sensor inicie

  if (!lox1.begin(0x29)) { // Inicializa el sensor 1 con su dirección por defecto
    Serial.println("Error al iniciar el sensor 1. Revisa las conexiones.");
    while (1); // Detiene la ejecución si hay un error
  }
  lox1.setAddress(newAddress1); // Asigna la nueva dirección I2C al sensor 1
  Serial.print("Sensor 1 inicializado con la direccion 0x");
  Serial.println(newAddress1, HEX);

  // --- Inicialización del Sensor 2 ---
  pinMode(xshutPin2, OUTPUT);
  digitalWrite(xshutPin2, LOW); // Asegura que el sensor 2 esté apagado inicialmente
  delay(10); // Pequeña espera para asegurar el estado LOW
  digitalWrite(xshutPin2, HIGH); // Enciende el sensor 2
  delay(10); // Espera para que el sensor inicie

  if (!lox2.begin(0x29)) { // Inicializa el sensor 2 con su dirección por defecto
    Serial.println("Error al iniciar el sensor 2. Revisa las conexiones.");
    while (1); // Detiene la ejecución si hay un error
  }
  lox2.setAddress(newAddress2); // Asigna la nueva dirección I2C al sensor 2
  Serial.print("Sensor 2 inicializado con la direccion 0x");
  Serial.println(newAddress2, HEX);
}


void loop() {
  VL53L0X_RangingMeasurementData_t measure1, measure2;

  // --- Obtener la lectura del Sensor 1 ---
  lox1.rangingTest(&measure1, false); // Realiza una medición en el sensor 1
  Serial.print("S1: ");
  if (measure1.RangeStatus != 4) { // Verifica si la medición es válida
    Serial.print(measure1.RangeMilliMeter); // CORRECCIÓN: Usar RangeMilliMeters
    Serial.println(" mm");
  } else {
    Serial.println("1000 mm");
  }

  // --- Obtener la lectura del Sensor 2 ---
  lox2.rangingTest(&measure2, false); // Realiza una medición en el sensor 2
  Serial.print("S2: ");
  if (measure2.RangeStatus != 4) { // Verifica si la medición es válida
    Serial.print(measure2.RangeMilliMeter); // CORRECCIÓN: Usar RangeMilliMeters
    Serial.println(" mm");
  } else {
    Serial.println("1000 mm");
  }


  delay(100); // Pequeña pausa entre lecturas


}
